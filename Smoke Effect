class Smoke
{
 float smokeX;
 float smokeY;
 float smokeSize;
 float smokeSpeedX;
 float smokeSpeedY;
 float theta;
 float thetaSpeed;
 
 int opacity;
 
 void update()
 {
   smokeY += smokeSpeedY;
   smokeX += smokeSpeedX;
   
 if (smokeY <= 20)
 if (smokeX >= carX+ 220)
 {
   smokeY = carY+30;
   smokeX = carX+340;
   
   smokeSpeedX = random(+1, +1.5);
   smokeSpeedY = random(-2, -4);
   smokeSize = random(10.0f, 15.0f);
   thetaSpeed = random(0,0.1f);
  }
  theta += thetaSpeed;
 }
 
 void render()
 {
   fill(100, opacity);
   ellipse(smokeX + noise(theta) * 30, smokeY, smokeSize, smokeSize);
 }
}

void setup()
{
  
  for (int i = 0; i < smokeTrails.length; i ++)
 {
 smokeTrails[i] = new Smoke();
 // Change the X value to be next to the exhaust
 smokeTrails[i].smokeX = random(carX+340, carX+350);
 // Do the same with the Y value
 smokeTrails[i].smokeY = random(carY+30);
 
 smokeTrails[i].smokeSpeedX = random (+1 +1.5);
 smokeTrails[i].smokeSpeedY = random(-2,-4);
 smokeTrails[i].smokeSize = random(5,10);
 smokeTrails[i].theta = random(0.0f, TWO_PI);
 smokeTrails[i].thetaSpeed = random(0.0f, 0.1f);
 smokeTrails[i].opacity = (int) random(100,200);
 }
}

int smokeCount = 70;
Smoke[] smokeTrails = new Smoke[smokeCount];

void draw()
{
  background(255);
 
 
  noStroke();
  
    for (int i = 0; i < smokeTrails.length; i ++)
  {
 smokeTrails[i].update();
 smokeTrails[i].render();
  }
}
